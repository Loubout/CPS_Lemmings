Service : GameEng
Types : bool, int, enum Nature{EMPTY, DIRT, METAL}, enum Status{LIVING, DEAD, SAVED}
Observators :
    const sizeColony : [GameEng] -> int
    spawnSpeed : [GameEng] -> int
    isObstacle: [GameEng] x int x int -> bool
    gameOver: [GameEng] -> bool
    getLevel: [GameEng] -> Level
    nbTours: [GameEng] -> int
    score: [GameEng] -> (int, int)
    nbSauvÃ©s: [GameEng] -> int    
    
    lemmings: [GameEng] -> Set<Lemming>
    active: [GameEng] x int  -> bool
    status: [GameEng] x int -> Status
    
    
    
Constructors :
    init: int x int -> [Level]
        pre init(size, sp) require size > 0 ^ sp > 0
Operators :
   nextTurn : [GameEng] ->  [GameEng]
    pre nextTurn(e) require not gameOver(e) 
Observations :
    [invariants]
    
    [init]
        editing(init(x, y)) == true
    [setNature]
        nature(setNature(l, x, y, n)) == n
    [goPlay]
        editing(goPlay(l)) == false
    [remove]
        nature(remove(l, x , y)) == EMPTY
    [build]
        nature(remove(l, x , y)) == DIRT